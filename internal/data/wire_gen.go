// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package data

import (
	"github.com/go-kratos/kratos-layout/internal/conf"
	"github.com/go-kratos/kratos/v2/log"
	"os"
)

// Injectors from wire.go:

func NewData(conf2 *conf.Data, l log.Logger) (*Data, func(), error) {
	helper := log.NewHelper(l)
	db, cleanup, err := NewMysql(conf2, l)
	if err != nil {
		return nil, nil, err
	}
	client, cleanup2, err := NewRedis(conf2, l)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	database, cleanup3, err := NewMongoDB(conf2, l)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	data := &Data{
		helper:  helper,
		mysql:   db,
		rdb:     client,
		mongodb: database,
	}
	return data, func() {
		cleanup3()
		cleanup2()
		cleanup()
	}, nil
}

func newTestRepo(data *conf.Data) (*greeterRepo, func(), error) {
	writer := _wireFileValue
	logger := log.NewStdLogger(writer)
	dataData, cleanup, err := NewData(data, logger)
	if err != nil {
		return nil, nil, err
	}
	dataGreeterRepo := newGreeterRepo(dataData, logger)
	return dataGreeterRepo, func() {
		cleanup()
	}, nil
}

var (
	_wireFileValue = os.Stdout
)
