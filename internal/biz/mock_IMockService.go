// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/go-kratos/kratos-layout/internal/biz (interfaces: GreeterRepo)

// Package biz is a generated GoMock package.
package biz

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGreeterRepo is a mock of GreeterRepo interface.
type MockGreeterRepo struct {
	ctrl     *gomock.Controller
	recorder *MockGreeterRepoMockRecorder
}

// MockGreeterRepoMockRecorder is the mock recorder for MockGreeterRepo.
type MockGreeterRepoMockRecorder struct {
	mock *MockGreeterRepo
}

// NewMockGreeterRepo creates a new mock instance.
func NewMockGreeterRepo(ctrl *gomock.Controller) *MockGreeterRepo {
	mock := &MockGreeterRepo{ctrl: ctrl}
	mock.recorder = &MockGreeterRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGreeterRepo) EXPECT() *MockGreeterRepoMockRecorder {
	return m.recorder
}

// CreateGreeter mocks base method.
func (m *MockGreeterRepo) CreateGreeter(arg0 context.Context, arg1 *Greeter) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateGreeter", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateGreeter indicates an expected call of CreateGreeter.
func (mr *MockGreeterRepoMockRecorder) CreateGreeter(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateGreeter", reflect.TypeOf((*MockGreeterRepo)(nil).CreateGreeter), arg0, arg1)
}

// UpdateGreeter mocks base method.
func (m *MockGreeterRepo) UpdateGreeter(arg0 context.Context, arg1 *Greeter) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateGreeter", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateGreeter indicates an expected call of UpdateGreeter.
func (mr *MockGreeterRepoMockRecorder) UpdateGreeter(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateGreeter", reflect.TypeOf((*MockGreeterRepo)(nil).UpdateGreeter), arg0, arg1)
}
